Temario dividido en 5 temas:
    Unidade 1. Procesamento de procesos.

        Programacion multiproceso(como minimo de 1 proceso, e pode ser unha arbore 
        de n procesos executandose concurrentemente, ainda que en cada momento só 
        se executa un proceso.)

        *Bloque de memoria   -espacio de direccion do proceso
                             -imaxe de memoria
        Buffer de entrada estandard(conectado co teclado).
        Buffer de saida estandard(conectado co monitor).
        Buffer de erros.
        O SO tamén é un conxunto de procesos(dividido en Kernel e aplicacions).
            A parte do SO que proporciona a execucion concurrente dos seus procesos 
            é o planificador de procesos.
            -Kernel(programa residente)atende á instruccion en execución, e 
            comunicase mediante interrupccions.
                -Posúe un modo dual(usuario-supervisor) que permite compartimentar as 
                execucions mediante permisos.
                -Non se pode considerar un proceso demonio, porque si interactua.

            -Aplicacións:

            -Procesos:
                -Proceso demonio: proceso de execucion concurrente que se executa sen 
                interaccion co usuario.
                -Estado dun proceso: Conxunto de valores que forman parte do proceso, 
                sendo os valores dos distintos rexistros da ALU.
                -Planificador de procesos.
                    -Curto prazo:multiples rutinas que traballan no orde dos 
                    milisegundos.
                    -Longo prazo:rutinas menos frecuentes que traballan no orde dos 
                    segundos(Creación de procesos, por exemplo).
                -Cambio de estado dun proceso: salvagarda dun proceso que sae de 
                execucion e cargar o estado do proceso que entra en execucion.
                -Estados dun proceso:
                    -Novo:Lista de entrada á espera de ser admitido.
                    -Listo:Lista de procesos admitidos á espera de ter tempo de
                     execución(tamén coñecida coma Cola de Procesos Preparados).
                    -En execucion:cada vez que un proceso entra neste estado, iniciase 
                    unha conta de tempo(quanto de execución), que se non se interrumpe 
                    antes de que este quanto acabe, o bloquea. 
                    -Bloqueado:Proceso á espera de que, ou se liberen recursos que 
                    precisan para a sua execucion(Varias Colas de Dispositivo).
                    -Terminado: estado no que entra un proceso ó terminar a sua 
                    execición:
                        - total e exitosamente.
                        - erroneamente.
                -Apuntes do luns 1.
                -Exercicio "Aleatorios":
                    Escribe un programa que arranque un proceso fillo que xenere números 
                    aleatorios(que serán de 0 a 10 e se imprimiran por pantalla), en calquera 
                    linguaxe, xenerando o seu ".exe"
                -O buffer(definicion), graba en disco o seu contido cando se enche(cando 
                    non ten espacio suficiente para realizar a seguinte escritura).
                    Considerase limpo cando o seu punteiro apunta á primeira dirección.
                -Unha aplicación multiproceso tratase por un arbore enario.ç
                -Hai dous ou mais procesos que cooperan dentro da mesma aplicación multiproceso, 
                    e reciben o nome de procesos cooperantes.
                -cando un proceso finaliza, liberanse tanto os seus recursos como a sua imaxe 
                    de memoria(memoria dinámica asignada para este proceso).
                -Os procesos poden ser finalizados, ou polo Kernel, ou polo seu proceso pai(se o ten).
                -Un proceso, para ser obxeto pai, debe instanciar un obxeto de tipo "porcess".
                -o metodo start crea o novo proceso, e é o kernel quen o arranca.
                -Para crear un proceso, temos que darlle  a o abxeto da clase proces, a 
                    especificación en disco do executable a instanciar.Introducese 
                como arguneto, e pode darselle como "args", "args[0]" ou  como a dirección do executable.
                -os procesos executanse de forma asincronica, o fillo non se relaciona co 
                    pai, pero o pais si co fillo.A execudión dos procesos dun mesmo árbore, 
                    é unha execución sincrónica.

                 Explicación do exemplo ALEATORIOS.
                    ORDE DE TRABALLO:
                    1º ".start": para crear o proceso.
                    2º chamada á función "proceso.getInputString" para que lle envie o string 
                        a o pai, para así comunicar, e é recollido polo pai mediante un "ImputStreamReader()", que é un buffer.
                        -br é un buffer que recibe os datos de saida do fillo.
                        -bps é o buffer que envia datos a o fillo, non a pantalla.
                        -as instruccións proceso.getInput ou .getOutput son ordes do pai, non do fillo.

    Unidade 2. Programación de fios. 
        Cada nucleo xestiona un fio, denominase programacion paralela
    Unidade 3. Programación distribuida. (Aplicacion executada en multiples equipos)
    Unidade 4. Programación de servizos.
    Unidade 5. Técnicas de programación segura.